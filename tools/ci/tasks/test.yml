components:
  wpt-base:
    provisionerId: aws-provisioner-v1
    deadline: "24 hours"
    image: harjgam/web-platform-tests:0.33
    maxRunTime: 7200,
    artifacts:
      public/results:
        path: /home/test/artifacts
        type: directory

  wpt-testharness:
    chunks: 12
    vars:
      test-type: testharness

  wpt-reftest:
    chunks: 6
    vars:
      test-type: reftest

  wpt-wdspec:
    chunks: 1
    vars:
      test-type: wdspec

  wpt-run:
    name: wpt-${vars.browser}-${vars.channel}-${vars.suite}-chunk-${chunks.id}
    options:
      xvfb: true
      oom-killer: true
      hosts: true
      browser: ${vars.browser}
      channel: ${vars.channel}
    command: >-
      ./tools/ci/taskcluster-run.py
      ${vars.browser}
      --
      --channel=${vars.channel}
      --log-wptreport=../artifacts/wpt_report.json
      --log-wptscreenshot=../artifacts/wpt_screenshot.txt
      --no-fail-on-unexpected
      --this-chunk=${chunks.id}
      --total-chunks=${chunks.total}

  trigger-master:
    trigger:
      branch:
        - master

  trigger-push:
    trigger:
      branch:
        - triggers/${vars.browser}_${vars.channel}

  trigger-daily:
    trigger:
      branch:
        - epochs/daily

  trigger-weekly:
    trigger:
      branch:
        - epochs/weekly

  trigger-pr:
    trigger:
      pull-request:

  browser-firefox:
    require:
      - download-firefox-${vars.channel}

  browser-chrome: {}


tasks:
  # Run full suites on push
  - $map:
      for:
        - vars:
            suite: testharness
        - vars:
            suite: reftest
        - vars:
            suite: wdspec
      do:
        $map:
          for:
            - vars:
                browser: firefox
                channel: nightly
              use:
                - trigger-master
                - trigger-push
            - vars:
                browser: firefox
                channel: beta
              use:
                - trigger-weekly
                - trigger-push
            - vars:
                browser: firefox
                channel: stable
              use:
                - trigger-daily
                - trigger-push
            - vars:
                browser: chrome
                channel: dev
              use:
                - trigger-master
                - trigger-push
            - vars:
                browser: chrome
                channel: beta
              use:
                - trigger-weekly
                - trigger-push
            - vars:
                browser: chrome
                channel: stable
              use:
                - trigger-daily
                - trigger-push
          do:
            ${vars.browser}-${vars.channel}-${vars.suite}:
              use:
                - wpt-base
                - wpt-run
                - browser-${vars.browser}
                - wpt-${vars.suite}
              description: >-
                A subset of WPT's "${vars.suite}" tests (chunk number ${chunks.id}
                of ${chunks.total}), run in the ${vars.channel} release of
                ${vars.browser}.

  - $map:
      for:
        - vars:
            browser: firefox
            channel: nightly
        - vars:
            browser: chrome
            channel: dev
      do:
        wpt-${vars.browser}-${vars.channel}-stability:
          use:
            - wpt-base
            - browser-${vars.browser}
          description: >-
            Verify that all tests affected by a pull request are stable
            when executed in ${vars.browser}.
          command: >-
            ./tools/ci/taskcluster-run.py
            --commit-range base_head
            ${vars.browser}
            --
            --channel=${vars.channel}
            --verify
          wpt-${vars.browser}-${vars.channel}-results:
            description: >-
              Collect results for all tests affected by a pull request in
              ${vars.browser}.
            command: >-
              ./tools/ci/taskcluster-run.py
              --commit-range base_head
              ${vars.browser}
              --
              --channel=${vars.channel}
              --no-fail-on-unexpected
              --log-wptreport=../artifacts/wpt_report.json
              --log-wptscreenshot=../artifacts/wpt_screenshot.txt

          wpt-${vars.browser}-${vars.channel}-results-without-changes:
            options:
              checkout: base_head
            description: >-
              Collect results for all tests affected by a pull request in
              ${vars.browser} but without the changes in the PR.
            command: >-
              ./tools/ci/taskcluster-run.py
              --commit-range task_head
              ${vars.browser}
              --
              --channel=${vars.channel}
              --no-fail-on-unexpected
              --log-wptreport=../artifacts/wpt_report.json
              --log-wptscreenshot=../artifacts/wpt_screenshot.txt
  - $map:
      for:
        - vars:
            channel: nightly
        - vars:
            channel: beta
        - vars:
            channel: stable
      do:
        download-firefox-${vars.channel}:
          use:
            - wpt-base
          command: "./wpt download --channel=${vars.channel} firefox browser"

  - lint:
      use:
        - wpt-base
        - trigger-master
        - trigger-pr
      command: "wpt-lint --all"
      description:

  - update-built:
      use:
        - wpt-base
        - trigger-pr
      schedule-if:
        run-job:
          - update_built
      command: "tools/ci/ci_built_diff.sh"

  - tools/unittests (Python 2):
      description: >-
        Unit tests for tools running under Python 2.7, excluding wptrunner
      command: tools/ci/ci_tools_unittest.sh
      env:
        - TOXENV=py27;
        - HYPOTHESIS_PROFILE=ci;
        - PY_COLORS=0;

  - tools/unittests (Python 3):
      description: >-
        Unit tests for tools running under Python 3, excluding wptrunner
      command: tools/ci/ci_tools_unittest.sh
      env:
        - TOXENV=py36;
        - HYPOTHESIS_PROFILE=ci;
        - PY_COLORS=0;
      install:
        - python3-pip
